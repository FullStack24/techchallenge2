openapi: 3.0.0
info:
  title: Blogging API
  version: 1.0.0
  description: API para gerenciamento de posts de blogging, incluindo criação, leitura, atualização e exclusão de posts e comentários.
servers:
  - url: http://localhost:3000/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Token JWT necessário para acessar os endpoints protegidos."
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: "Título do Post"
        content:
          type: string
          example: "Conteúdo do post..."
        author:
          type: string
          example: "Dim Grei"
        createdAt:
          type: string
          format: date-time
          example: "2024-08-01T12:34:56Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-08-01T12:34:56Z"
    PostInput:
      type: object
      properties:
        title:
          type: string
          example: "Título do Novo Post"
        content:
          type: string
          example: "Conteúdo do novo post..."
        author:
          type: string
          example: "Dim Grei"
    User:
      type: object
      properties:
        username:
          type: string
          example: "novoUsuario"
        email:
          type: string
          example: "usuario@example.com"
        password:
          type: string
          example: "senhaSegura"
    UserList:
      type: array
      items:
        type: object
        properties:
          username:
            type: string
            example: "usuario"
    Comment:
      type: object
      properties:
        id:
          type: string
          example: "456e7890-e12b-34d5-a456-426614174001"
        post_id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        author:
          type: string
          example: "Jane Doe"
        content:
          type: string
          example: "Este é um comentário sobre o post."
        created_at:
          type: string
          format: date-time
          example: "2024-08-01T12:34:56Z"
    CommentInput:
      type: object
      properties:
        post_id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        author:
          type: string
          example: "Jane Doe"
        content:
          type: string
          example: "Este é um comentário sobre o post."
    Error:
      type: object
      properties:
        error:
          type: string
          description: "Descrição do erro"
        message:
          type: string
          description: "Mensagem detalhada sobre o erro"
paths:
  /posts:
    get:
      summary: "Lista todos os posts"
      description: "Retorna uma lista de todos os posts."
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Lista de posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        500:
          description: "Erro interno ao tentar recuperar a lista de posts"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/admin:
    get:
      summary: "Lista todas as postagens (Visão Administrativa)"
      description: "Retorna uma lista de todas as postagens criadas, acessível apenas para administradores."
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Lista de postagens"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        401:
          description: "Token de autorização inválido ou ausente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar recuperar a lista de postagens"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "Cria um novo post"
      description: "Cria um novo post no sistema."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        201:
          description: "Post criado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: "Dados inválidos fornecidos para criar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar criar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/{id}:
    get:
      summary: "Obtém um post por ID"
      description: "Retorna um post específico baseado no ID fornecido."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do post a ser retornado"
          schema:
            type: string
      responses:
        200:
          description: "Post encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        404:
          description: "Post com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar recuperar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "Atualiza um post existente"
      description: "Atualiza um post existente baseado no ID fornecido."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do post a ser atualizado"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        200:
          description: "Post atualizado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: "Dados inválidos fornecidos para atualizar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: "Post com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar atualizar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: "Deleta um post existente"
      description: "Remove um post do sistema baseado no ID fornecido."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do post a ser deletado"
          schema:
            type: string
      responses:
        200:
          description: "Post deletado com sucesso"
        404:
          description: "Post com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar deletar o post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts/{postId}/comments:
    get:
      summary: "Lista todos os comentários de um post"
      description: "Retorna uma lista de todos os comentários associados a um post específico."
      parameters:
        - name: postId
          in: path
          required: true
          description: "ID do post para o qual os comentários estão associados"
          schema:
            type: string
      responses:
        200:
          description: "Lista de comentários retornada com sucesso"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        404:
          description: "Post com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar recuperar os comentários"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "Cria um novo comentário"
      description: "Cria um novo comentário para um post específico."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        201:
          description: "Comentário criado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        400:
          description: "Dados inválidos fornecidos para criar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar criar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comments/{id}:
    get:
      summary: "Obtém um comentário por ID"
      description: "Retorna um comentário específico baseado no ID fornecido."
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do comentário a ser retornado"
          schema:
            type: string
      responses:
        200:
          description: "Comentário encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        404:
          description: "Comentário com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar recuperar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: "Atualiza um comentário existente"
      description: "Atualiza um comentário existente baseado no ID fornecido."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do comentário a ser atualizado"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        200:
          description: "Comentário atualizado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        400:
          description: "Dados inválidos fornecidos para atualizar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: "Comentário com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar atualizar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: "Deleta um comentário existente"
      description: "Remove um comentário do sistema baseado no ID fornecido."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do comentário a ser deletado"
          schema:
            type: string
      responses:
        200:
          description: "Comentário deletado com sucesso"
        404:
          description: "Comentário com o ID fornecido não encontrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar deletar o comentário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: "Realiza login"
      description: "Autentica um usuário e retorna um token JWT."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "usuario@example.com"
                password:
                  type: string
                  example: "senha"
      responses:
        200:
          description: "Token JWT retornado com sucesso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        401:
          description: "Credenciais inválidas fornecidas para login"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar realizar login"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/register:
    post:
      summary: "Cria um novo usuário"
      description: "Cria um novo usuário no sistema."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "novoUsuario"
                email:
                  type: string
                  example: "usuario@example.com"
                password:
                  type: string
                  example: "senhaSegura"
      responses:
        201:
          description: "Usuário criado com sucesso"
        400:
          description: "Erro ao criar usuário, dados inválidos fornecidos"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: "Erro interno ao tentar criar o usuário"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      summary: "Lista todos os usuários"
      description: "Retorna uma lista de todos os usuários cadastrados, sem expor senhas."
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Lista de usuários retornada com sucesso"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserList'
        401:
          description: "Token de autorização ausente ou inválido"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Descrição do erro"
                    example: "Token de autorização ausente."
                  message:
                    type: string
                    description: "Mensagem detalhada sobre o erro"
                    example: "O cabeçalho Authorization está ausente ou inválido."
        500:
          description: "Erro interno ao tentar recuperar a lista de usuários"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
